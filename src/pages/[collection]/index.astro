---
// src/pages/[collection]/index.astro
import Layout from "@/layouts/Layout.astro";
import Section from "@/components/Section.astro";
import Card from "@/components/LoopComponents/Card";
import { collections } from "@/content/config";
import { getCollectionMeta } from "@/utils/FetchMeta";
import { capitalize } from "@/utils/ContentUtils";

export async function getStaticPaths() {
  const collectionNames = Object.keys(collections);
  const allPaths = [];
  for (const collName of collectionNames) {
    const meta = await getCollectionMeta(collName);
    if (meta.hasPage !== false) {
      allPaths.push({ params: { collection: collName } });
    }
  }
  return allPaths;
}

const { collection } = Astro.params;
let meta = {};
try {
  meta = await getCollectionMeta(collection);
} catch {}
---
<Layout title={capitalize(collection)} description={meta.description}>
  {meta.sections && meta.sections.length > 0 ? (
    meta.sections.map((section, i) => (
      <Section
        key={i}
        collection={section.collection}
        query={section.query}
        heading={section.heading || { text: capitalize(section.collection), tagName: "h2" }}
        description={section.description ?? meta.description}
        buttons={section.buttons}
        sectionClass={section.sectionClass}
        itemsClass={section.itemsClass}
        itemClass={section.itemClass}
        contentClass={section.contentClass}
        buttonsSectionClass={section.buttonsSectionClass}
      />
    ))
  ) : (
    <Section
      collection={collection}
      query="getAll"
      heading={{ text: capitalize(collection), tagName: "h2" }}
      description={meta.description}
    />
  )}
</Layout>
