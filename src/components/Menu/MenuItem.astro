---
import { normalizeRef }  from "@/utils/ContentUtils";
import { allMenuItems }  from "./menu-data";
import Submenu           from "./Submenu.astro";

const {
  item,
  itemClass = "",
  linkClass = "",
  hierarchical = false,
  /* full submenu descriptor */
  submenu = {
    component: null,
    itemsClass: "",
    subMenuItem: {
      component: null,
      props: {
        itemClass: "",
        linkClass: "",
        hierarchical: true,
        subMenuItem: null,
      },
    },
  },
} = Astro.props;

/* Stable identifier */
const thisId = item.data.id ?? normalizeRef(item.data.link);

/* Children (cached list, no DB hit) */
const childItems = allMenuItems.filter(
  (c) => c.data.parent && normalizeRef(c.data.parent) === thisId,
);

const hasChildren = hierarchical && childItems.length > 0;

/* Resolve submenu component */
const SubmenuComponent = submenu.component ?? Submenu;
---

<li
  role="none"
  class={`group relative menu-item ${itemClass}`}
>
  <a
    href={item.data.link}
    class={linkClass}
    rel="noopener noreferrer"
    role="menuitem"
    aria-haspopup={hasChildren ? "true" : undefined}
  >
    {item.data.icon && (
      <img
        src={item.data.icon}
        alt=""
        class="w-5 h-5 bg-[var(--color-accent)] rounded-full"
        aria-hidden="true"
      />
    )}
    <span>{item.data.title}</span>

    {hasChildren && (
      <span
        class="submenu-arrow ml-1 text-sm transform transition-transform duration-200"
        aria-hidden="true"
      >
        â–¼
      </span>
    )}
  </a>

  {hasChildren && (
    <SubmenuComponent
      parentId={thisId}
      childItems={childItems}
      submenu={submenu}
    />
  )}
</li>
