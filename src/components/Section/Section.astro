---
// src/components/Section/Section.astro
/**
 * Section Component - Advanced variant system with maximum flexibility
 * 
 * Usage:
 * - Basic: <Section>Content here</Section>
 * - Variants: <Section variant="hero"><div slot="heading">Title</div></Section>
 * - Advanced: <Section variant="customGrid" variantProps={{...}}>Content</Section>
 */
import VariantWrapper from "./VariantWrapper.astro";

const {
  // Basic props
  id,
  tagName = "section",
  variant,
  variantProps = {},
  
  // Styling props
  sectionClass = "",
  
  ...props
} = Astro.props;

// Check if we should use variant system
const shouldUseVariant = variant && [
  'hero', 'twoCol', 'cardGrid', 'centered', 'simple',
  'masonry', 'tabs', 'accordion', 'customGrid'
].includes(variant);

// Determine the element to render
const Element = tagName;
---

<Element
  id={id}
  class={`${sectionClass} relative w-full`}
  {...props}
>
  {/* Variant System */}
  {shouldUseVariant ? (
    <VariantWrapper variant={variant} variantProps={variantProps}>
      {/* Hero Slots */}
      <slot name="heading" />
      <slot name="description" />
      <slot name="buttons" />
      
      {/* Two Column Slots */}
      <slot name="left" />
      <slot name="right" />
      
      {/* Card Grid Slots */}
      <slot name="cards" />
      
      {/* Centered Slots */}
      <slot name="additional" />
      <slot name="footer" />
      
      {/* Simple Slots */}
      <slot name="header" />
      
      {/* Masonry Slots */}
      <slot name="items" />
      
      {/* Tabs Slots */}
      <slot name="tabs" />
      
      {/* Accordion Slots */}
      <slot name="items" />
      
      {/* Custom Grid Slots */}
      <slot name="items" />
      
      {/* Default Slot */}
      <slot />
    </VariantWrapper>
  ) : (
    /* Default Section Layout */
    <div class="content-section max-w-full z-10">
      <slot />
    </div>
  )}
</Element>
